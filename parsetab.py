
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftDOENDANDORIFELSEFORWHILETRUEFALSEFOREXPRNAMEleftEQUALSCONSTANTCHARINTSTRINGDOUBLENUMBERleftGREATERLESSGREATEQLESSEQleftPLUSMINUSleftTIMESDIVIDEleftLPARENRPARENrightUMINUSAND CHAR CONSTANT DEF DIVIDE DO DOUBLE ELSE END EQUALS FALSE FOR FOREXPR GREATEQ GREATER IF INT LESS LESSEQ LPAREN MINUS NAME NUMBER OR PLUS RPAREN STRING TIMES TRUE WHILEstatements : statements statement\n        | statement\n        | expressionstatement : NAME EQUALS expression\n                 | CONSTANT expression\n                 statement : DEF NAME LPAREN NAME RPAREN DO statements ENDstatement : IF expression DO statements END\n                 | IF expression DO statements ELSE statements ENDstatement : FOR NAME FOREXPR NAME DO statements ENDstatement : WHILE statement DO statements ENDexpression : NUMBERexpression : expression PLUS expression\n                  | expression MINUS expression\n                  | expression TIMES expression\n                  | expression DIVIDE expression\n                  expression : expression GREATER expression\n                  | expression LESS expression\n                  | expression GREATEQ expression\n                  | expression LESSEQ expression\n                  | expression AND expression\n                  | expression OR expressionexpression : MINUS expression %prec UMINUSexpression : LPAREN expression RPARENexpression : INTexpression : DOUBLEexpression : CHARexpression : TRUEexpression : FALSEexpression : STRINGexpression : NAME'
    
_lr_action_items = {'DO':([2,3,6,9,14,16,17,19,20,22,24,26,44,45,46,47,48,49,50,51,52,53,54,55,59,60,61,62,69,70,71,],[-11,-26,-27,-29,-28,-24,-25,-30,-5,40,-22,42,-23,-4,-20,-21,-15,-18,-17,-14,-19,-12,-13,-16,64,-10,65,-7,-8,-9,-6,]),'CONSTANT':([0,2,3,4,5,6,9,10,14,15,16,17,18,19,20,23,24,40,42,44,45,46,47,48,49,50,51,52,53,54,55,56,58,60,62,63,64,65,66,67,68,69,70,71,],[1,-11,-26,1,1,-27,-29,-2,-28,-30,-24,-25,-3,-30,-5,-1,-22,1,1,-23,-4,-20,-21,-15,-18,-17,-14,-19,-12,-13,-16,1,1,-10,-7,1,1,1,1,1,1,-8,-9,-6,]),'LESS':([2,3,6,9,14,15,16,17,18,19,20,24,26,28,44,45,46,47,48,49,50,51,52,53,54,55,],[-11,-26,-27,-29,-28,-30,-24,-25,34,-30,34,-22,34,34,-23,34,34,34,-15,-18,-17,-14,-19,-12,-13,-16,]),'NUMBER':([0,1,7,11,13,29,30,31,32,33,34,35,36,37,38,39,40,42,63,64,65,],[2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,]),'CHAR':([0,1,7,11,13,29,30,31,32,33,34,35,36,37,38,39,40,42,63,64,65,],[3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,]),'WHILE':([0,2,3,4,5,6,9,10,14,15,16,17,18,19,20,23,24,40,42,44,45,46,47,48,49,50,51,52,53,54,55,56,58,60,62,63,64,65,66,67,68,69,70,71,],[4,-11,-26,4,4,-27,-29,-2,-28,-30,-24,-25,-3,-30,-5,-1,-22,4,4,-23,-4,-20,-21,-15,-18,-17,-14,-19,-12,-13,-16,4,4,-10,-7,4,4,4,4,4,4,-8,-9,-6,]),'FOREXPR':([27,],[43,]),'GREATER':([2,3,6,9,14,15,16,17,18,19,20,24,26,28,44,45,46,47,48,49,50,51,52,53,54,55,],[-11,-26,-27,-29,-28,-30,-24,-25,39,-30,39,-22,39,39,-23,39,39,39,-15,-18,-17,-14,-19,-12,-13,-16,]),'TRUE':([0,1,7,11,13,29,30,31,32,33,34,35,36,37,38,39,40,42,63,64,65,],[6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,]),'MINUS':([0,1,2,3,6,7,9,11,13,14,15,16,17,18,19,20,24,26,28,29,30,31,32,33,34,35,36,37,38,39,40,42,44,45,46,47,48,49,50,51,52,53,54,55,63,64,65,],[7,7,-11,-26,-27,7,-29,7,7,-28,-30,-24,-25,38,-30,38,-22,38,38,7,7,7,7,7,7,7,7,7,7,7,7,7,-23,38,38,38,-15,38,38,-14,38,-12,-13,38,7,7,7,]),'DEF':([0,2,3,4,5,6,9,10,14,15,16,17,18,19,20,23,24,40,42,44,45,46,47,48,49,50,51,52,53,54,55,56,58,60,62,63,64,65,66,67,68,69,70,71,],[8,-11,-26,8,8,-27,-29,-2,-28,-30,-24,-25,-3,-30,-5,-1,-22,8,8,-23,-4,-20,-21,-15,-18,-17,-14,-19,-12,-13,-16,8,8,-10,-7,8,8,8,8,8,8,-8,-9,-6,]),'STRING':([0,1,7,11,13,29,30,31,32,33,34,35,36,37,38,39,40,42,63,64,65,],[9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,]),'RPAREN':([2,3,6,9,14,16,17,19,24,28,44,46,47,48,49,50,51,52,53,54,55,57,],[-11,-26,-27,-29,-28,-24,-25,-30,-22,44,-23,-20,-21,-15,-18,-17,-14,-19,-12,-13,-16,61,]),'PLUS':([2,3,6,9,14,15,16,17,18,19,20,24,26,28,44,45,46,47,48,49,50,51,52,53,54,55,],[-11,-26,-27,-29,-28,-30,-24,-25,37,-30,37,-22,37,37,-23,37,37,37,-15,37,37,-14,37,-12,-13,37,]),'$end':([2,3,5,6,9,10,14,15,16,17,18,19,20,23,24,44,45,46,47,48,49,50,51,52,53,54,55,60,62,69,70,71,],[-11,-26,0,-27,-29,-2,-28,-30,-24,-25,-3,-30,-5,-1,-22,-23,-4,-20,-21,-15,-18,-17,-14,-19,-12,-13,-16,-10,-7,-8,-9,-6,]),'END':([2,3,6,9,10,14,15,16,17,18,19,20,23,24,44,45,46,47,48,49,50,51,52,53,54,55,56,58,60,62,66,67,68,69,70,71,],[-11,-26,-27,-29,-2,-28,-30,-24,-25,-3,-30,-5,-1,-22,-23,-4,-20,-21,-15,-18,-17,-14,-19,-12,-13,-16,60,62,-10,-7,69,70,71,-8,-9,-6,]),'DIVIDE':([2,3,6,9,14,15,16,17,18,19,20,24,26,28,44,45,46,47,48,49,50,51,52,53,54,55,],[-11,-26,-27,-29,-28,-30,-24,-25,32,-30,32,-22,32,32,-23,32,32,32,-15,32,32,-14,32,32,32,32,]),'FOR':([0,2,3,4,5,6,9,10,14,15,16,17,18,19,20,23,24,40,42,44,45,46,47,48,49,50,51,52,53,54,55,56,58,60,62,63,64,65,66,67,68,69,70,71,],[12,-11,-26,12,12,-27,-29,-2,-28,-30,-24,-25,-3,-30,-5,-1,-22,12,12,-23,-4,-20,-21,-15,-18,-17,-14,-19,-12,-13,-16,12,12,-10,-7,12,12,12,12,12,12,-8,-9,-6,]),'EQUALS':([15,21,],[29,29,]),'ELSE':([2,3,6,9,10,14,15,16,17,18,19,20,23,24,44,45,46,47,48,49,50,51,52,53,54,55,58,60,62,69,70,71,],[-11,-26,-27,-29,-2,-28,-30,-24,-25,-3,-30,-5,-1,-22,-23,-4,-20,-21,-15,-18,-17,-14,-19,-12,-13,-16,63,-10,-7,-8,-9,-6,]),'LPAREN':([0,1,7,11,13,25,29,30,31,32,33,34,35,36,37,38,39,40,42,63,64,65,],[13,13,13,13,13,41,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,]),'TIMES':([2,3,6,9,14,15,16,17,18,19,20,24,26,28,44,45,46,47,48,49,50,51,52,53,54,55,],[-11,-26,-27,-29,-28,-30,-24,-25,35,-30,35,-22,35,35,-23,35,35,35,-15,35,35,-14,35,35,35,35,]),'IF':([0,2,3,4,5,6,9,10,14,15,16,17,18,19,20,23,24,40,42,44,45,46,47,48,49,50,51,52,53,54,55,56,58,60,62,63,64,65,66,67,68,69,70,71,],[11,-11,-26,11,11,-27,-29,-2,-28,-30,-24,-25,-3,-30,-5,-1,-22,11,11,-23,-4,-20,-21,-15,-18,-17,-14,-19,-12,-13,-16,11,11,-10,-7,11,11,11,11,11,11,-8,-9,-6,]),'AND':([2,3,6,9,14,15,16,17,18,19,20,24,26,28,44,45,46,47,48,49,50,51,52,53,54,55,],[-11,-26,-27,-29,-28,-30,-24,-25,30,-30,30,-22,30,30,-23,30,-20,-21,-15,-18,-17,-14,-19,-12,-13,-16,]),'FALSE':([0,1,7,11,13,29,30,31,32,33,34,35,36,37,38,39,40,42,63,64,65,],[14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,]),'NAME':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,23,24,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,58,60,62,63,64,65,66,67,68,69,70,71,],[15,19,-11,-26,21,21,-27,19,25,-29,-2,19,27,19,-28,-30,-24,-25,-3,-30,-5,-1,-22,19,19,19,19,19,19,19,19,19,19,19,15,57,15,59,-23,-4,-20,-21,-15,-18,-17,-14,-19,-12,-13,-16,21,21,-10,-7,15,15,15,21,21,21,-8,-9,-6,]),'GREATEQ':([2,3,6,9,14,15,16,17,18,19,20,24,26,28,44,45,46,47,48,49,50,51,52,53,54,55,],[-11,-26,-27,-29,-28,-30,-24,-25,33,-30,33,-22,33,33,-23,33,33,33,-15,-18,-17,-14,-19,-12,-13,-16,]),'INT':([0,1,7,11,13,29,30,31,32,33,34,35,36,37,38,39,40,42,63,64,65,],[16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,]),'DOUBLE':([0,1,7,11,13,29,30,31,32,33,34,35,36,37,38,39,40,42,63,64,65,],[17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,]),'LESSEQ':([2,3,6,9,14,15,16,17,18,19,20,24,26,28,44,45,46,47,48,49,50,51,52,53,54,55,],[-11,-26,-27,-29,-28,-30,-24,-25,36,-30,36,-22,36,36,-23,36,36,36,-15,-18,-17,-14,-19,-12,-13,-16,]),'OR':([2,3,6,9,14,15,16,17,18,19,20,24,26,28,44,45,46,47,48,49,50,51,52,53,54,55,],[-11,-26,-27,-29,-28,-30,-24,-25,31,-30,31,-22,31,31,-23,31,-20,-21,-15,-18,-17,-14,-19,-12,-13,-16,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'expression':([0,1,7,11,13,29,30,31,32,33,34,35,36,37,38,39,40,42,63,64,65,],[18,20,24,26,28,45,46,47,48,49,50,51,52,53,54,55,18,18,18,18,18,]),'statements':([0,40,42,63,64,65,],[5,56,58,66,67,68,]),'statement':([0,4,5,40,42,56,58,63,64,65,66,67,68,],[10,22,23,10,10,23,23,10,10,10,23,23,23,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> statements","S'",1,None,None,None),
  ('statements -> statements statement','statements',2,'p_expr','parser.py',143),
  ('statements -> statement','statements',1,'p_expr','parser.py',144),
  ('statements -> expression','statements',1,'p_expr','parser.py',145),
  ('statement -> NAME EQUALS expression','statement',3,'p_assign','parser.py',149),
  ('statement -> CONSTANT expression','statement',2,'p_assign','parser.py',150),
  ('statement -> DEF NAME LPAREN NAME RPAREN DO statements END','statement',8,'p_func','parser.py',155),
  ('statement -> IF expression DO statements END','statement',5,'p_if','parser.py',159),
  ('statement -> IF expression DO statements ELSE statements END','statement',7,'p_if','parser.py',160),
  ('statement -> FOR NAME FOREXPR NAME DO statements END','statement',7,'p_for','parser.py',164),
  ('statement -> WHILE statement DO statements END','statement',5,'p_while','parser.py',168),
  ('expression -> NUMBER','expression',1,'p_number','parser.py',172),
  ('expression -> expression PLUS expression','expression',3,'p_binary','parser.py',176),
  ('expression -> expression MINUS expression','expression',3,'p_binary','parser.py',177),
  ('expression -> expression TIMES expression','expression',3,'p_binary','parser.py',178),
  ('expression -> expression DIVIDE expression','expression',3,'p_binary','parser.py',179),
  ('expression -> expression GREATER expression','expression',3,'p_comparison','parser.py',184),
  ('expression -> expression LESS expression','expression',3,'p_comparison','parser.py',185),
  ('expression -> expression GREATEQ expression','expression',3,'p_comparison','parser.py',186),
  ('expression -> expression LESSEQ expression','expression',3,'p_comparison','parser.py',187),
  ('expression -> expression AND expression','expression',3,'p_comparison','parser.py',188),
  ('expression -> expression OR expression','expression',3,'p_comparison','parser.py',189),
  ('expression -> MINUS expression','expression',2,'p_minus','parser.py',193),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_group','parser.py',197),
  ('expression -> INT','expression',1,'p_int','parser.py',201),
  ('expression -> DOUBLE','expression',1,'p_double','parser.py',205),
  ('expression -> CHAR','expression',1,'p_char','parser.py',209),
  ('expression -> TRUE','expression',1,'p_true','parser.py',213),
  ('expression -> FALSE','expression',1,'p_false','parser.py',217),
  ('expression -> STRING','expression',1,'p_string','parser.py',221),
  ('expression -> NAME','expression',1,'p_name','parser.py',225),
]
